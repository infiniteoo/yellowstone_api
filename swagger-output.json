{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Yellowstone API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Characters",
      "description": "Endpoints"
    }
  ],
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/automatic/users/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/automatic/users": {
      "post": {
        "tags": [],
        "description": "",
        "produces": ["application/xml"],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/character/id:": {
      "get": {
        "tags": ["User"],
        "description": "Endpoint to get the specific user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/automatic_and_incremented/users": {
      "post": {
        "tags": ["User"],
        "description": "Endpoint to add a user.",
        "produces": ["application/xml"],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/manual/users/{id}": {
      "patch": {
        "tags": [],
        "description": "Endpoint added manually.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "query",
            "description": "User information.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "User found."
          },
          "500": {
            "description": "Server Failure."
          }
        }
      }
    },
    "/security": {
      "head": {
        "tags": [],
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "obj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "petstore_auth": ["write_pets", "read_pets"]
          }
        ]
      }
    }
  },
  "definitions": {
    "Characters": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "ObjectID",
          "example": "61ca47bb529d4d0d12225a48"
        },
        "name": {
          "type": "string",
          "example": "John Dutton"
        },
        "birthday": {
          "type": "string",
          "example": "January 1st, 1940"
        },
        "occupation": {
          "type": "string",
          "example": "Owner, Dutton Ranch"
        },
        "img": {
          "type": "string",
          "example": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Kevin_Costner_2016.jpg/330px-Kevin_Costner_2016.jpg"
        },
        "status": {
          "type": "string",
          "example": "Alive"
        },
        "appearance": {
          "type": "Array",
          "example": "[S01E01], [S01E02]"
        },
        "category": {
          "type": "string",
          "example": "Yellowstone"
        },
        "portrayed": {
          "type": "string",
          "example": "Kevin Costner"
        }
      },
      "xml": {
        "name": "Parents"
      }
    },
    "Episodes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "parents": {
          "xml": {
            "name": "parents"
          },
          "$ref": "#/definitions/Parents"
        },
        "diplomas": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "school": {
                "type": "string",
                "example": "XYZ University"
              },
              "year": {
                "type": "number",
                "example": 2020
              },
              "completed": {
                "type": "boolean",
                "example": true
              },
              "internship": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "example": 290
                  },
                  "location": {
                    "type": "string",
                    "example": "XYZ Company"
                  }
                }
              }
            }
          }
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Quotes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": ["name", "age"],
      "xml": {
        "name": "AddUser"
      }
    },
    "Deaths": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": ["name", "age"],
      "xml": {
        "name": "AddUser"
      }
    }
  }
}
